name: Flutter Build with Permissions

on:
  workflow_dispatch:
    inputs:
      zip_url:
        description: 'URL of the source ZIP to build'
        required: true
        type: string

env:
  ZIP_FILE: source.zip
  SRC_DIR: source

jobs:
  build-apk:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Download ZIP from input
        run: |
          echo "Downloading ${{ github.event.inputs.zip_url }}"
          curl -L \
            -H "Accept: application/octet-stream" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "${{ github.event.inputs.zip_url }}" \
            -o source.zip
          
          # Test and extract ZIP
          unzip -t source.zip || echo "ZIP test completed with warnings"
          unzip -q source.zip -d source
          
          echo "Extracted files:"
          ls -la source/

      - name: Install JDK (required by Android build)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Flutter (stable)
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # Enhanced caching for Flutter & Dart
      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            source/.dart_tool
            source/.flutter-plugins
            source/.flutter-plugins-dependencies
          key: ${{ runner.os }}-flutter-${{ hashFiles('source/**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      # Enhanced Gradle caching
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            source/android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('source/**/*.gradle*', 'source/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Cache Android build files
      - name: Cache Android build files
        uses: actions/cache@v4
        with:
          path: |
            source/build
            source/android/app/build
          key: ${{ runner.os }}-android-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-android-build-

      - name: Step 1 - Flutter create with Android platform
        working-directory: ./source
        run: |
          echo "=== STEP 1: Running flutter create . --platforms=android ==="
          flutter create . --platforms=android
          echo "Flutter create completed successfully"

      - name: Step 2 - Add Internet Permission
        working-directory: ./source
        run: |
          echo "=== STEP 2: Adding android.permission.INTERNET ==="
          
          # Path to Android manifest
          MANIFEST_PATH="android/app/src/main/AndroidManifest.xml"
          
          if [ ! -f "$MANIFEST_PATH" ]; then
            echo "ERROR: AndroidManifest.xml not found at $MANIFEST_PATH"
            exit 1
          fi
          
          # Check if permission already exists
          if grep -q "android.permission.INTERNET" "$MANIFEST_PATH"; then
            echo "INTERNET permission already exists"
          else
            echo "Adding INTERNET permission to AndroidManifest.xml"
            
            # Add the permission before the <application> tag
            sed -i '/<application/i\    <uses-permission android:name="android.permission.INTERNET" />' "$MANIFEST_PATH"
            
            echo "Permission added successfully"
          fi
          
          # Verify the permission was added
          echo "Current permissions in manifest:"
          grep -n "uses-permission" "$MANIFEST_PATH" || echo "No uses-permission tags found"

      - name: Accept Android licenses
        run: |
          echo "=== Accepting Android licenses ==="
          yes | sdkmanager --licenses || true

      - name: Flutter pub get
        working-directory: ./source
        run: |
          echo "Getting Flutter dependencies..."
          flutter pub get

      # Configure Gradle build options for better performance
      - name: Configure Gradle for CI
        working-directory: ./source
        run: |
          echo "org.gradle.jvmargs=-Xmx4g -XX:MaxPermSize=1024m -XX:+HeapDumpOnOutOfMemoryError" >> android/gradle.properties
          echo "org.gradle.parallel=true" >> android/gradle.properties
          echo "org.gradle.caching=true" >> android/gradle.properties
          echo "org.gradle.daemon=false" >> android/gradle.properties

      - name: Flutter build APK (release)
        working-directory: ./source
        env:
          CI: true
        run: |
          echo "=== Running flutter build apk --release ==="
          flutter build apk --release
          echo "APK build completed successfully"
          
          # Show build output location
          echo "Built APK location:"
          find build/app/outputs -name "*.apk" -type f

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: flutter-apk
          path: |
            source/build/app/outputs/flutter-apk/*.apk
